// pages/api/election/enroll.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { prisma } from "@/lib/prisma";
import { getSession } from "next-auth/react"; // assuming you're using next-auth

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  const session = await getSession({ req });

  if (!session) {
    return res.status(401).json({ message: "Unauthorized" });
  }

  const { user } = session;

  try {
    // Check if user is already enrolled in any elections
    const existingVote = await prisma.vote.findFirst({
      where: {
        userId: user.id,
      },
    });

    if (existingVote) {
      return res.status(400).json({ message: "You are already enrolled in the election." });
    }

    // (Optional) Any extra logic for enrolling a user
    return res.status(200).json({ message: "Successfully enrolled in the election." });
  } catch (error) {
    console.error("Error enrolling user:", error);
    return res.status(500).json({ message: "Internal Server Error" });
  }
}
